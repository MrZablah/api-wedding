custom: ${file(./config/variables.yml)}

# Note: This was change bc of the serverless dashboard was:
# ${self:custom.Stack_Name}-${self:custom.Region}
service: api-wedding-us-east-1

# app and org for use with dashboard.serverless.com
app: api-wedding
org: mrzablah

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: ">=2.0.0 <3.0.0"

# Plugins
plugins:
  - serverless-domain-manager

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  profile: zablah
  stage: ${self:custom.Stage}
  region: ${self:custom.Region}
  timeout: ${self:custom.Timeout}
  memorySize: ${self:custom.MemorySize}
  logRetentionInDays: ${self:custom.LogRetention}
  deploymentBucket:
    name: serverless-framework.zablah.${self:custom.Region}.deploys
  tags:
    STACK: ${self:service}
    App: ${self:custom.Tag_App}
    Project: ${self:custom.Tag_Project}
  environment:
    DYNAMO_TABLE: ${self:custom.DynamoDB_Table}

# Packaging information here
package:
  individually: true

# Layer Information here
layers:
  api:
    description: "some node module for the api"
    path: Lib
    compatibleRuntimes:
      - nodejs12.x

functions:
  create:
    handler: Functions/create.create
    role: { Fn::GetAtt: [ ApiWeddingRole, Arn ] }
    layers:
      - { Ref: ApiLambdaLayer }
    package:
      patterns:
        - "!**/**"
        - "functions/create.js"
    events:
      - http:
          cors: true
          path: v1/guest
          method: post
    tags:
      FUNCTION: create

# CloudFormation resource templates here
resources: ${file(./serverless.resources.yml)}
